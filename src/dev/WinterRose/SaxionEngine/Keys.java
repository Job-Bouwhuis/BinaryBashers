package dev.WinterRose.SaxionEngine;

/*
* The enum entries are generated by ChatGPT-4o to save me time writing this all out by hand.
* The methods below are not
* */

public enum Keys
{
    A('A'),
    B('B'),
    C('C'),
    D('D'),
    E('E'),
    F('F'),
    G('G'),
    H('H'),
    I('I'),
    J('J'),
    K('K'),
    L('L'),
    M('M'),
    N('N'),
    O('O'),
    P('P'),
    Q('Q'),
    R('R'),
    S('S'),
    T('T'),
    U('U'),
    V('V'),
    W('W'),
    X('X'),
    Y('Y'),
    Z('Z'),
    NUM_0('0'),
    NUM_1('1'),
    NUM_2('2'),
    NUM_3('3'),
    NUM_4('4'),
    NUM_5('5'),
    NUM_6('6'),
    NUM_7('7'),
    NUM_8('8'),
    NUM_9('9'),
    SPACE(' '),
    ENTER('\n'),
    ESCAPE((char) 27),
    TAB('\t'),
    BACKSPACE((char) 8),
    F1((char)112),
    F2((char)113),
    F3((char)114),
    F4((char)115),
    F5((char)116),
    F6((char)117),
    F7((char)118),
    F8((char)119),
    F9((char)120),
    F10((char)121),
    F11((char)122),
    F12((char)123),
    ALT((char)18),
    DELETE((char) 127);

    private final char character;

    Keys()
    {
        this.character = '\0'; // Default for non-character keys
    }

    Keys(char character)
    {
        this.character = character;
    }

    public char getCharacter()
    {
        return character;
    }

    public boolean matches(char input)
    {
        if (Character.isLetter(character))
            return Character.toUpperCase(character) == Character.toUpperCase(input);
        return character == input;
    }
}
